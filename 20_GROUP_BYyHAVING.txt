NOTA IMPORTANTE A RECORDAR, ORDEN DE SQL: SELECT...FROM...WHERE...GROUP BY...HAVING...ORDER BY...LIMIT

ORDER BY sirve para agrupar un registro mientras tenga un cierto campo de valor compartido. habra una imagen 
que lo ejemplifique.

Por ejemplo, de la tabla:

ProductID	ProductName			SupplierID	CategoryID	Unit			Price
1		Chais				1		1		10 boxes x 20 bags	18
2		Chang				1		1		24 - 12 oz bottles	19
3		Aniseed Syrup			1		2		12 - 550 ml bottles	10
4		Chef Anton's Cajun Seasoning	2		2		48 - 6 oz jars		22
5		Chef Anton's Gumbo Mix		2		2		36 boxes		21.35
6		Grandma's Boysenberry Spread	3		2		12 - 8 oz jars		25
7		Uncle Bob's Organic Dried Pears	3		7		12 - 1 lb pkgs.		30
8		Northwoods Cranberry Sauce	3		2		12 - 12 oz jars		40
9		Mishi Kobe Niku			4		6		18 - 500 g pkgs.	97
10		Ikura				4		8		12 - 200 ml jars	31

SELECT SupplierID, round(avg(Price)) AS promedio FROM Products GROUP BY SupplierID ORDER BY promedio

SupplierID	promedio
1		16.0
2		20.0
3		32.0
4		46.0
5		30.0
6		15.0
7		36.0
8		28.0
9		15.0
10		5.0

//agrupo todos los suplierID identicos junto a sus precios. tener en cuenta que la verdadera tabla es mas larga
asi que los promedios podrian no ser correctos en este caso.

--------------------
HAVING es un filtrador como la clausula WHERE solo que en lugar de filtrar registros, filtra grupos generados
por el GROUP. Nos permitira usar los condicionales nuevamente.

ejemplo:

SELECT SupplierID, round(avg(Price)) AS promedio FROM Products GROUP BY SupplierID
SupplierID	promedio
1		16.0
2		20.0
3		32.0
4		46.0
5		30.0
6		15.0
7		36.0
8		28.0
9		15.0
10		5.0
11		30.0
12		45.0
13		26.0
14		26.0
15		20.0
16		15.0
17		20.0
18		141.0
19		14.0
20		26.0
21		11.0
22		11.0
23		18.0
24		31.0
25		16.0
26		29.0
27		13.0
28		45.0
29		39.0

SELECT SupplierID, round(avg(Price)) AS promedio FROM Products GROUP BY SupplierID HAVING promedio > 32

SupplierID	promedio
4		46.0
7		36.0
12		45.0
18		141.0
28		45.0
29		39.0
